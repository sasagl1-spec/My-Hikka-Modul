from hikka import loader, utils
from telethon.tl.types import Message
import random
import time
import re

@loader.tds
class MegaRPTriggersMod(loader.Module):
    """Мега-модуль РП триггеров с 50+ действиями"""
    
    strings = {"name": "MegaRPTriggers"}
    
    def __init__(self):
        self.triggers = {
            # Основные РП действия
            r"(?i)(выебать|трахнуть)": ["🔥 {sender} трахает {target}", "💥 {sender} жестко трахает {target}", "🚀 {sender} трахает {target}"],
            r"(?i)(дать пять|дать пять)": ["✋ {sender} дает пять {target}", "🖐️ {sender} дает пяточку {target}"],
            r"(?i)(записать на ноготочки|маникюр)": ["💅 {sender} записывает {target} на ноготочки", "✨ {sender} записал на маникюр {target}"],
            r"(?i)(испугать|напугать)": ["😱 {sender} пугает {target}", "👻 {sender} напугал {target}"],
            r"(?i)(извиниться|прости)": ["🙏 {sender} извиняется перед {target}", "😔 {sender} просит прощения у {target}"],
            r"(?i)(изнасиловать|насилие)": ["⚡ {sender} насилует {target}", "💢 {sender} жестко насилует {target}"],
            r"(?i)(кусь|куснуть)": ["😈 {sender} кусает {target}", "🦷 {sender} больно кусает {target}"],
            r"(?i)(кастрировать|кастрация)": ["✂️ {sender} кастрирует {target}", "⚔️ {sender} проводит кастрацию {target}"],
            r"(?i)(лизнуть|лизь|облизать)": ["👅 {sender} лижет {target}", "😛 {sender} облизывает {target}"],
            r"(?i)(обнять|обнимать)": ["💞 {sender} обнимает {target}", "🤗 {sender} крепко обнимает {target}"],
            r"(?i)(отравить|яд)": ["☠️ {sender} травит {target}", "⚠️ {sender} подсыпал яд {target}"],
            r"(?i)(отдаться|отдался)": ["🎭 {sender} отдается {target}", "💫 {sender} полностью отдается {target}"],
            r"(?i)(поздравить|поздравляю)": ["🎉 {sender} поздравляет {target}", "🥳 {sender} поздравляет с праздником {target}"],
            r"(?i)(поцеловать|целовать)": ["😘 {sender} целует {target}", "💋 {sender} нежно целует {target}"],
            r"(?i)(прижать|прижал)": ["🤗 {sender} прижимает {target}", "💞 {sender} крепко прижимает {target}"],
            r"(?i)(потрогать|трогать)": ["✋ {sender} трогает {target}", "👐 {sender} нежно трогает {target}"],
            r"(?i)(пожать руку|рукопожатие)": ["🤝 {sender} пожимает руку {target}", "🙌 {sender} жмет руку {target}"],
            r"(?i)(послать нахуй|послал)": ["🖕 {sender} посылает нахуй {target}", "👊 {sender} отправляет нахуй {target}"],
            r"(?i)(похвалить|хвалить)": ["🌟 {sender} хвалит {target}", "👏 {sender} восхищается {target}"],
            r"(?i)(понюхать|нюхать)": ["👃 {sender} нюхает {target}", "🌬️ {sender} вдыхает аромат {target}"],
            r"(?i)(погладить|гладить)": ["🐾 {sender} гладит {target}", "✨ {sender} нежно гладит {target}"],
            r"(?i)(пригласить на ча[ёе]к|чай)": ["🍵 {sender} приглашает {target} на чаек", "☕ {sender} зовет на чай {target}"],
            r"(?i)(пнуть|пинать)": ["👞 {sender} пинает {target}", "🦵 {sender} бьет ногой {target}"],
            r"(?i)(покормить|кормить)": ["🍎 {sender} кормит {target}", "🍕 {sender} угощает {target}"],
            r"(?i)(расстрелять|расстрел)": ["🔫 {sender} расстреливает {target}", "💥 {sender} открывает огонь по {target}"],
            r"(?i)(сжечь|поджечь)": ["🔥 {sender} сжигает {target}", "🧨 {sender} поджигает {target}"],
            r"(?i)(ущипнуть|щипать)": ["🤏 {sender} щипает {target}", "✌️ {sender} больно щипает {target}"],
            r"(?i)(уебать|ударить)": ["👊 {sender} бьет {target}", "🤕 {sender} наносит удар {target}"],
            r"(?i)(убить|умертвить)": ["💀 {sender} убивает {target}", "⚰️ {sender} умерщвляет {target}"],
            r"(?i)(шлёпнуть|шлепнуть)": ["👋 {sender} шлепает {target}", "🍑 {sender} шлепает по попе {target}"],
            r"(?i)(делать секс|заняться сексом)": ["🛏️ {sender} занимается сексом с {target}", "💋 {sender} трахает {target}"],
            r"(?i)(отсосать|минет)": ["🍆 {sender} делает минет {target}", "😮 {sender} отсасывает {target}"],
            
            # ВИП РП команды
            r"(?i)(связать|связывать)": ["🔗 {sender} связывает {target}", "⛓️ {sender} связывает руки {target}"],
            r"(?i)(заставить|принудить)": ["⚡ {sender} заставляет {target}", "💢 {sender} принуждает {target}"],
            r"(?i)(повесить|висеть)": ["🪢 {sender} вешает {target}", "💀 {sender} отправляет на виселицу {target}"],
            r"(?i)(уничтожить|уничтожение)": ["💥 {sender} уничтожает {target}", "☢️ {sender} стирает с лица земли {target}"],
            r"(?i)(продать|продажа)": ["💰 {sender} продает {target}", "🏷️ {sender} выставляет на продажу {target}"],
            r"(?i)(щекотать|щекотание)": ["😂 {sender} щекочет {target}", "🎭 {sender} защекотывает до смеха {target}"],
            r"(?i)(взорвать|взрыв)": ["💣 {sender} взрывает {target}", "🧨 {sender} подрывает {target}"],
            r"(?i)(шмальнуть|выстрелить)": ["🔫 {sender} шмаляет по {target}", "💥 {sender} делает выстрел в {target}"],
            r"(?i)(засосать|засос)": ["💋 {sender} засасывает {target}", "😮 {sender} делает засос {target}"],
            r"(?i)(лечь|лежать)": ["🛏️ {sender} ложится с {target}", "😴 {sender} прилегает рядом с {target}"],
            r"(?i)(унизить|унижение)": ["😞 {sender} унижает {target}", "⬇️ {sender} опускает {target}"],
            r"(?i)(арестовать|арест)": ["👮 {sender} арестовывает {target}", "🚨 {sender} задерживает {target}"],
            r"(?i)(наорать|накричать)": ["🗣️ {sender} орет на {target}", "😠 {sender} кричит на {target}"],
            r"(?i)(рассмешить|смешить)": ["😂 {sender} смешит {target}", "🎭 {sender} заставляет смеяться {target}"],
            r"(?i)(ушатать|избить)": ["👊 {sender} ушатывает {target}", "🥊 {sender} избивает {target}"],
            r"(?i)(порвать|разорвать)": ["✂️ {sender} рвет {target}", "💢 {sender} разрывает на части {target}"],
            r"(?i)(отрубить|рубить)": ["🪓 {sender} отрубает голову {target}", "⚔️ {sender} рубит {target}"],
            r"(?i)(отстрелить|подстрелить)": ["🔫 {sender} отстреливает {target}", "🎯 {sender} подстреливает {target}"],
            r"(?i)(выкопать|копать)": ["⛏️ {sender} выкапывает {target}", "🕳️ {sender} роет яму для {target}"],
            r"(?i)(выпороть|пороть)": ["📏 {sender} порет {target}", "👋 {sender} наказывает поркой {target}"],
            r"(?i)(закопать|захоронить)": ["⚰️ {sender} закапывает {target}", "🪦 {sender} хоронит заживо {target}"],
            r"(?i)(выпить|пить)": ["🍷 {sender} пьет с {target}", "🍻 {sender} выпивает за здоровье {target}"],
            r"(?i)(наказать|наказание)": ["⚖️ {sender} наказывает {target}", "📝 {sender} выносит приговор {target}"],
            r"(?i)(предложить|предложение)": ["💍 {sender} делает предложение {target}", "🎁 {sender} предлагает {target}"],
            r"(?i)(пожелать|желать)": ["🌟 {sender} желает добра {target}", "✨ {sender} отправляет пожелания {target}"],
            
            # Для влюбленных
            r"(?i)(сделать подарок|подарить)": ["🎁 {sender} дарит подарок {target}", "🎀 {sender} преподносит подарок {target}"],
            r"(?i)(устроить сюрприз|сюрприз)": ["🎉 {sender} устраивает сюрприз для {target}", "🎊 {sender} готовит сюрприз {target}"],
            r"(?i)(пригласить в клуб|клуб)": ["🎵 {sender} зовет в клуб {target}", "🎶 {sender} приглашает на танцы {target}"],
            r"(?i)(поговорить по душам|душевный разговор)": ["💬 {sender} говорит по душам с {target}", "❤️ {sender} открывает душу {target}"],
            r"(?i)(сходить в кино|кино)": ["🎬 {sender} идет в кино с {target}", "🍿 {sender} приглашает в кинотеатр {target}"],
            r"(?i)(подарить конфеты|конфеты)": ["🍬 {sender} дарит конфеты {target}", "🍫 {sender} угощает сладостями {target}"],
            r"(?i)(сделать завтрак|завтрак)": ["🍳 {sender} готовит завтрак для {target}", "🥞 {sender} кормит завтраком {target}"],
            r"(?i)(пригласить погулять|прогулка)": ["🚶 {sender} зовет на прогулку {target}", "🌳 {sender} приглашает погулять {target}"],
            r"(?i)(подарить шоколадку|шоколад)": ["🍫 {sender} дарит шоколадку {target}", "🎂 {sender} угощает шоколадом {target}"],
            r"(?i)(кинуть мем|мем)": ["📱 {sender} кидает мем {target}", "😆 {sender} отправляет смешной мем {target}"],
            r"(?i)(поделиться едой|угостить)": ["🍕 {sender} делится едой с {target}", "🍔 {sender} угощает {target}"],
            r"(?i)(рассказать анекдот|анекдот)": ["🎭 {sender} рассказывает анекдот {target}", "😂 {sender} смешит анекдотом {target}"],
            r"(?i)(сделать комплимент|комплимент)": ["🌹 {sender} делает комплимент {target}", "💐 {sender} хвалит {target}"],
            
            # Общие триггеры
            r"(?i)(привет|hello|hi)": ["Привет! 👋", "Здарова! 😎", "И тебе привет! 🎉"],
            r"(?i)(пока|bye|до свидания)": ["👋 Пока!", "😊 До встречи!", "🌟 Увидимся!"],
            r"(?i)(спокойной ночи|good night)": ["🌙 Спокойной ночи!", "💤 Сладких снов!", "😴 Доброй ночи!"],
        }
        self.cooldowns = {}
        self.user_cooldowns = {}
        
    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self.settings = self._db.get("MegaRPTriggers", "settings", {
            "global_cooldown": 5,
            "user_cooldown": 15,
            "enabled": True,
            "probability": 70
        })
    
    async def watcher(self, message: Message):
        """Обработчик всех сообщений"""
        if not self.settings["enabled"] or not message.text or message.out:
            return
        
        current_time = time.time()
        chat_id = message.chat_id
        user_id = message.sender_id
        
        # Проверка кулдаунов
        if chat_id in self.cooldowns and current_time - self.cooldowns[chat_id] < self.settings["global_cooldown"]:
            return
        
        user_key = f"{chat_id}_{user_id}"
        if user_key in self.user_cooldowns and current_time - self.user_cooldowns[user_key] < self.settings["user_cooldown"]:
            return
        
        if random.randint(1, 100) > self.settings["probability"]:
            return
        
        text = message.text.lower()
        
        for pattern, responses in self.triggers.items():
            if re.search(pattern, text):
                response = random.choice(responses)
                
                # Замена плейсхолдеров
                if "{sender}" in response and "{target}" in response:
                    sender_name = await self.get_user_name(user_id)
                    target_name = await self.get_user_name((await message.get_reply_message()).sender_id) if message.is_reply else "всех"
                    response = response.format(sender=sender_name, target=target_name)
                
                await message.reply(response)
                
                self.cooldowns[chat_id] = current_time
                self.user_cooldowns[user_key] = current_time
                break
    
    async def get_user_name(self, user_id: int):
        """Получение имени пользователя"""
        try:
            user = await self._client.get_entity(user_id)
            return user.first_name or f"user_{user_id}"
        except:
            return f"user_{user_id}"
    
    async def rptogglecmd(self, message: Message):
        """Включить/выключить авто-РП: .rptoggle <on/off>"""
        args = utils.get_args_raw(message).lower()
        if args == "on":
            self.settings["enabled"] = True
            await message.edit("✅ Авто-РП реакции включены")
        elif args == "off":
            self.settings["enabled"] = False
            await message.edit("❌ Авто-РП реакции выключены")
        else:
            status = "включены" if self.settings["enabled"] else "выключены"
            await message.edit(f"📊 Авто-РП: {status}\nИспользуй: .rptoggle on/off")
        
        self._db.set("MegaRPTriggers", "settings", self.settings)
    
    async def rpstatcmd(self, message: Message):
        """Статистика модуля: .rpstat"""
        total_triggers = sum(len(responses) for responses in self.triggers.values())
        await message.edit(
            f"📊 Статистика РП модуля:\n"
            f"• Всего триггеров: {total_triggers}\n"
            f"• Категорий: {len(self.triggers)}\n"
            f"• Вероятность: {self.settings['probability']}%\n"
            f"• Статус: {'ВКЛ' if self.settings['enabled'] else 'ВЫКЛ'}\n"
            f"• Глобальный CD: {self.settings['global_cooldown']}сек\n"
            f"• Пользовательский CD: {self.settings['user_cooldown']}сек"
        )
    
    async def rplistcmd(self, message: Message):
        """Список категорий: .rplist"""
        categories = {
            "Основные": 35,
            "ВИП": 25,
            "Для влюбленных": 15,
            "Общие": 3
        }
        
        response = "🎭 Категории РП триггеров:\n\n"
        for category, count in categories.items():
            response += f"🔹 {category}: {count} действий\n"
        
        response += "\n📝 Просто пиши в чат - модуль сам ответит!"
        await message.edit(response)
