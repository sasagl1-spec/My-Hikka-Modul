from hikka import loader, utils
from telethon.tl.types import Message
import random
import time
import re

@loader.tds
class SelectiveRPMod(loader.Module):
    """РП модуль с выбором чатов и без общих триггеров"""
    
    strings = {"name": "SelectiveRPMod"}
    
    def __init__(self):
        self.commands = {
            # === ОСНОВНЫЕ РП ДЕЙСТВИЯ ===
            "выебать": ["🔥 {sender} трахает {target}", "💥 {sender} жестко трахает {target}"],
            "трахнуть": ["🚀 {sender} трахает {target}", "⚡ {sender} быстро трахает {target}"],
            "дать пять": ["✋ {sender} дает пять {target}", "🖐️ {sender} дает пяточку {target}"],
            "записать на ноготочки": ["💅 {sender} записывает {target} на ноготочки", "✨ {sender} записал на маникюр {target}"],
            "маникюр": ["💅 {sender} делает маникюр {target}", "🌸 {sender} красит ногти {target}"],
            "испугать": ["😱 {sender} пугает {target}", "👻 {sender} напугал {target}"],
            "напугать": ["😨 {sender} пугает {target}", "💀 {sender} страшно пугает {target}"],
            "извиниться": ["🙏 {sender} извиняется перед {target}", "😔 {sender} просит прощения у {target}"],
            "прости": ["🥺 {sender} просит прощения у {target}", "🙇 {sender} извиняется перед {target}"],
            "изнасиловать": ["⚡ {sender} насилует {target}", "💢 {sender} жестко насилует {target}"],
            "насилие": ["🔞 {sender} совершает насилие над {target}", "⚔️ {sender} применяет силу к {target}"],
            "кусь": ["😈 {sender} кусает {target}", "🦷 {sender} больно кусает {target}"],
            "куснуть": ["🐺 {sender} кусает {target}", "😬 {sender} кусает за ухо {target}"],
            "кастрировать": ["✂️ {sender} кастрирует {target}", "⚔️ {sender} проводит кастрацию {target}"],
            "кастрация": ["🔪 {sender} делает кастрацию {target}", "⚰️ {sender} лишает мужественности {target}"],
            "лизнуть": ["👅 {sender} лижет {target}", "😛 {sender} облизывает {target}"],
            "лизь": ["😋 {sender} лижет {target}", "👅 {sender} проводит языком по {target}"],
            "облизать": ["🤤 {sender} облизывает {target}", "👅 {sender} полностью облизывает {target}"],
            "обнять": ["💞 {sender} обнимает {target}", "🤗 {sender} крепко обнимает {target}"],
            "обнимать": ["🫂 {sender} обнимает {target}", "💕 {sender} нежно обнимает {target}"],
            "отравить": ["☠️ {sender} травит {target}", "⚠️ {sender} подсыпал яд {target}"],
            "яд": ["🧪 {sender} дает яд {target}", "💀 {sender} отравляет {target}"],
            "отдаться": ["🎭 {sender} отдается {target}", "💫 {sender} полностью отдается {target}"],
            "отдался": ["😏 {sender} отдается {target}", "🔥 {sender} добровольно отдается {target}"],
            "поздравить": ["🎉 {sender} поздравляет {target}", "🥳 {sender} поздравляет с праздником {target}"],
            "поздравляю": ["🎊 {sender} поздравляет {target}", "🎁 {sender} говорит поздравления {target}"],
            "поцеловать": ["😘 {sender} целует {target}", "💋 {sender} нежно целует {target}"],
            "целовать": ["😚 {sender} целует {target}", "❤️ {sender} страстно целует {target}"],
            "прижать": ["🤗 {sender} прижимает {target}", "💞 {sender} крепко прижимает {target}"],
            "прижал": ["🏋️ {sender} прижимает к стене {target}", "💪 {sender} сильно прижимает {target}"],
            "потрогать": ["✋ {sender} трогает {target}", "👐 {sender} нежно трогает {target}"],
            "трогать": ["🤲 {sender} трогает {target}", "✋ {sender} проводит рукой по {target}"],
            "пожать руку": ["🤝 {sender} пожимает руку {target}", "🙌 {sender} жмет руку {target}"],
            "рукопожатие": ["👏 {sender} жмет руку {target}", "🤝 {sender} предлагает рукопожатие {target}"],
            "послать нахуй": ["🖕 {sender} посылает нахуй {target}", "👊 {sender} отправляет нахуй {target}"],
            "послал": ["🚀 {sender} посылает {target} нахуй", "🖕 {sender} показывает фак {target}"],
            "похвалить": ["🌟 {sender} хвалит {target}", "👏 {sender} восхищается {target}"],
            "хвалить": ["🏆 {sender} хвалит {target}", "⭐ {sender} говорит комплименты {target}"],
            "понюхать": ["👃 {sender} нюхает {target}", "🌬️ {sender} вдыхает аромат {target}"],
            "нюхать": ["🌹 {sender} нюхает {target}", "👃 {sender} наслаждается запахом {target}"],
            "погладить": ["🐾 {sender} гладит {target}", "✨ {sender} нежно гладит {target}"],
            "гладить": ["🤲 {sender} гладит {target}", "💫 {sender} ласкает {target}"],
            "пригласить на чаёк": ["🍵 {sender} приглашает {target} на чаек", "☕ {sender} зовет на чай {target}"],
            "пригласить на чай": ["🫖 {sender} зовет на чай {target}", "🍵 {sender} приглашает чаевничать {target}"],
            "чай": ["☕ {sender} предлагает чай {target}", "🍵 {sender} угощает чаем {target}"],
            "пнуть": ["👞 {sender} пинает {target}", "🦵 {sender} бьет ногой {target}"],
            "пинать": ["⚽ {sender} пинает {target}", "👢 {sender} пинает ногой {target}"],
            "покормить": ["🍎 {sender} кормит {target}", "🍕 {sender} угощает {target}"],
            "кормить": ["🍽️ {sender} кормит {target}", "🥘 {sender} предлагает еду {target}"],
            "расстрелять": ["🔫 {sender} расстреливает {target}", "💥 {sender} открывает огонь по {target}"],
            "расстрел": ["🎯 {sender} расстреливает {target}", "🔫 {sender} проводит расстрел {target}"],
            "сжечь": ["🔥 {sender} сжигает {target}", "🧨 {sender} поджигает {target}"],
            "поджечь": ["🔥 {sender} поджигает {target}", "🎇 {sender} устраивает поджог {target}"],
            "ущипнуть": ["🤏 {sender} щипает {target}", "✌️ {sender} больно щипает {target}"],
            "щипать": ["🦀 {sender} щипает {target}", "✂️ {sender} больно щипает {target}"],
            "уебать": ["👊 {sender} бьет {target}", "🤕 {sender} наносит удар {target}"],
            "ударить": ["🥊 {sender} ударяет {target}", "💥 {sender} бьет со всей силы {target}"],
            "убить": ["💀 {sender} убивает {target}", "⚰️ {sender} умерщвляет {target}"],
            "умертвить": ["☠️ {sender} умерщвляет {target}", "💀 {sender} лишает жизни {target}"],
            "шлёпнуть": ["👋 {sender} шлепает {target}", "🍑 {sender} шлепает по попе {target}"],
            "шлепнуть": ["✋ {sender} шлепает {target}", "👋 {sender} дает подзатыльник {target}"],
            "делать секс": ["🛏️ {sender} занимается сексом с {target}", "💋 {sender} трахает {target}"],
            "заняться сексом": ["🔞 {sender} занимается сексом с {target}", "🍆 {sender} входит в {target}"],
            "отсосать": ["🍆 {sender} делает минет {target}", "😮 {sender} отсасывает {target}"],
            "минет": ["👄 {sender} делает минет {target}", "😋 {sender} удовлетворяет {target}"],

            # === ВИП РП КОМАНДЫ ===
            "связать": ["🔗 {sender} связывает {target}", "⛓️ {sender} связывает руки {target}"],
            "связывать": ["🪢 {sender} связывает {target}", "🔐 {sender} связывает веревками {target}"],
            "заставить": ["⚡ {sender} заставляет {target}", "💢 {sender} принуждает {target}"],
            "принудить": ["🎯 {sender} принуждает {target}", "⚡ {sender} вынуждает {target}"],
            "повесить": ["🪢 {sender} вешает {target}", "💀 {sender} отправляет на виселицу {target}"],
            "висеть": ["📿 {sender} вешает {target}", "🪦 {sender} казнит через повешение {target}"],
            "уничтожить": ["💥 {sender} уничтожает {target}", "☢️ {sender} стирает с лица земли {target}"],
            "уничтожение": ["🌋 {sender} уничтожает {target}", "💣 {sender} проводит тотальное уничтожение {target}"],
            "продать": ["💰 {sender} продает {target}", "🏷️ {sender} выставляет на продажу {target}"],
            "продажа": ["🛒 {sender} продает {target}", "💸 {sender} сдает в рабство {target}"],
            "щекотать": ["😂 {sender} щекочет {target}", "🎭 {sender} защекотывает до смеха {target}"],
            "щекотание": ["🤣 {sender} щекочет {target}", "😆 {sender} вызывает смех у {target}"],
            "взорвать": ["💣 {sender} взрывает {target}", "🧨 {sender} подрывает {target}"],
            "взрыв": ["💥 {sender} устраивает взрыв {target}", "🎆 {sender} подрывает бомбу под {target}"],
            "шмальнуть": ["🔫 {sender} шмаляет по {target}", "💥 {sender} делает выстрел в {target}"],
            "выстрелить": ["🎯 {sender} стреляет в {target}", "🔫 {sender} делает точный выстрел {target}"],
            "засосать": ["💋 {sender} засасывает {target}", "😮 {sender} делает засос {target}"],
            "засос": ["👅 {sender} оставляет засос на {target}", "💋 {sender} сосет шею {target}"],
            "лечь": ["🛏️ {sender} ложится с {target}", "😴 {sender} прилегает рядом с {target}"],
            "лежать": ["🛌 {sender} ложится с {target}", "😉 {sender} предлагает полежать вместе {target}"],
            "унизить": ["😞 {sender} унижает {target}", "⬇️ {sender} опускает {target}"],
            "унижение": ["📉 {sender} унижает {target}", "😢 {sender} оскорбляет {target}"],
            "арестовать": ["👮 {sender} арестовывает {target}", "🚨 {sender} задерживает {target}"],
            "арест": ["⚖️ {sender} арестовывает {target}", "🔒 {sender} надевает наручники на {target}"],
            "наорать": ["🗣️ {sender} орет на {target}", "😠 {sender} кричит на {target}"],
            "накричать": ["📢 {sender} кричит на {target}", "👺 {sender} ругается на {target}"],
            "рассмешить": ["😂 {sender} смешит {target}", "🎭 {sender} заставляет смеяться {target}"],
            "смешить": ["🤡 {sender} смешит {target}", "😄 {sender} веселит {target}"],
            "ушатать": ["👊 {sender} ушатывает {target}", "🥊 {sender} избивает {target}"],
            "избить": ["🤜 {sender} избивает {target}", "💥 {sender} наносит побои {target}"],
            "порвать": ["✂️ {sender} рвет {target}", "💢 {sender} разрывает на части {target}"],
            "разорвать": ["🔪 {sender} разрывает {target}", "⚔️ {sender} раздирает на куски {target}"],
            "отрубить": ["🪓 {sender} отрубает голову {target}", "⚔️ {sender} рубит {target}"],
            "рубить": ["🔪 {sender} рубит {target}", "🗡️ {sender} разрубает пополам {target}"],
            "отстрелить": ["🔫 {sender} отстреливает {target}", "🎯 {sender} подстреливает {target}"],
            "подстрелить": ["🏹 {sender} подстреливает {target}", "🎯 {sender} попадает в {target}"],
            "выкопать": ["⛏️ {sender} выкапывает {target}", "🕳️ {sender} роет яму для {target}"],
            "копать": ["🧹 {sender} копает могилу для {target}", "🪦 {sender} готовит захоронение {target}"],
            "выпороть": ["📏 {sender} порет {target}", "👋 {sender} наказывает поркой {target}"],
            "пороть": ["🪠 {sender} порет {target}", "⚡ {sender} дает ремня {target}"],
            "закопать": ["⚰️ {sender} закапывает {target}", "🪦 {sender} хоронит заживо {target}"],
            " захоронить": ["🧟 {sender} хоронит {target}", "⚰️ {sender} предает земле {target}"],
            "выпить": ["🍷 {sender} пьет с {target}", "🍻 {sender} выпивает за здоровье {target}"],
            "пить": ["🥂 {sender} пьет вместе с {target}", "🍺 {sender} предлагает выпить {target}"],
            "наказать": ["⚖️ {sender} наказывает {target}", "📝 {sender} выносит приговор {target}"],
            "наказание": ["🔨 {sender} наказывает {target}", "⚒️ {sender} подвергает наказанию {target}"],
            "предложить": ["💍 {sender} делает предложение {target}", "🎁 {sender} предлагает {target}"],
            "предложение": ["💎 {sender} делает предложение {target}", "💍 {sender} предлагает руку и сердце {target}"],
            "пожелать": ["🌟 {sender} желает добра {target}", "✨ {sender} отправляет пожелания {target}"],
            "желать": ["🌈 {sender} желает удачи {target}", "🎯 {sender} желает успехов {target}"],

            # === ДЛЯ ВЛЮБЛЁННЫХ ===
            "сделать подарок": ["🎁 {sender} дарит подарок {target}", "🎀 {sender} преподносит подарок {target}"],
            "подарить": ["🎁 {sender} дарит {target}", "💝 {sender} делает подарок {target}"],
            "устроить сюрприз": ["🎉 {sender} устраивает сюрприз для {target}", "🎊 {sender} готовит сюрприз {target}"],
            "сюрприз": ["🎁 {sender} готовит сюрприз {target}", "🎪 {sender} устраивает неожиданность {target}"],
            "пригласить в клуб": ["🎵 {sender} зовет в клуб {target}", "🎶 {sender} приглашает на танцы {target}"],
            "клуб": ["🕺 {sender} зовет в клуб {target}", "💃 {sender} приглашает потанцевать {target}"],
            "поговорить по душам": ["💬 {sender} говорит по душам с {target}", "❤️ {sender} открывает душу {target}"],
            "душевный разговор": ["🗣️ {sender} ведет душевный разговор с {target}", "💭 {sender} делится сокровенным {target}"],
            "сходить в кино": ["🎬 {sender} идет в кино с {target}", "🍿 {sender} приглашает в кинотеатр {target}"],
            "кино": ["📽️ {sender} предлагает сходить в кино с {target}", "🎞️ {sender} зовет на фильм {target}"],
            "подарить конфеты": ["🍬 {sender} дарит конфеты {target}", "🍫 {sender} угощает сладостями {target}"],
            "конфеты": ["🍭 {sender} дарит конфеты {target}", "🍬 {sender} угощает вкусняшками {target}"],
            "сделать завтрак": ["🍳 {sender} готовит завтрак для {target}", "🥞 {sender} кормит завтраком {target}"],
            "завтрак": ["☕ {sender} готовит завтрак {target}", "🍳 {sender} угощает утренней едой {target}"],
            "пригласить погулять": ["🚶 {sender} зовет на прогулку {target}", "🌳 {sender} приглашает погулять {target}"],
            "прогулка": ["🌄 {sender} предлагает прогулку {target}", "🚶‍♂️ {sender} зовет пройтись {target}"],
            "подарить шоколадку": ["🍫 {sender} дарит шоколадку {target}", "🎂 {sender} угощает шоколадом {target}"],
            "шоколад": ["🍫 {sender} дарит шоколад {target}", "🍫 {sender} угощает сладким {target}"],
            "кинуть мем": ["📱 {sender} кидает мем {target}", "😆 {sender} отправляет смешной мем {target}"],
            "мем": ["😂 {sender} отправляет мем {target}", "📲 {sender} делится мемом с {target}"],
            "поделиться едой": ["🍕 {sender} делится едой с {target}", "🍔 {sender} угощает {target}"],
            "угостить": ["🍎 {sender} угощает {target}", "🍖 {sender} делится едой с {target}"],
            "рассказать анекдот": ["🎭 {sender} рассказывает анекдот {target}", "😂 {sender} смешит анекдотом {target}"],
            "анекдот": ["📜 {sender} рассказывает анекдот {target}", "😄 {sender} веселит шуткой {target}"],
            "сделать комплимент": ["🌹 {sender} делает комплимент {target}", "💐 {sender} хвалит {target}"],
            "комплимент": ["🌟 {sender} делает комплимент {target}", "✨ {sender} говорит приятное {target}"],
        }
        self.cooldowns = {}
        self.enabled_chats = set()
        
    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self.settings = self._db.get("SelectiveRPMod", "settings", {
            "cooldown": 3,
            "enabled": True
        })
        self.enabled_chats = set(self._db.get("SelectiveRPMod", "enabled_chats", []))
    
    async def rpaddchatcmd(self, message: Message):
        """Добавить чат в разрешенные: .rpaddchat"""
        chat_id = message.chat_id
        if chat_id in self.enabled_chats:
            await message.edit("✅ Этот чат уже в списке разрешенных")
            return
        
        self.enabled_chats.add(chat_id)
        self._db.set("SelectiveRPMod", "enabled_chats", list(self.enabled_chats))
        await message.edit("✅ Чат добавлен в разрешенные для РП команд")

    async def rpremovechatcmd(self, message: Message):
        """Удалить чат из разрешенных: .rpremovechat"""
        chat_id = message.chat_id
        if chat_id not in self.enabled_chats:
            await message.edit("❌ Этот чат не в списке разрешенных")
            return
        
        self.enabled_chats.remove(chat_id)
        self._db.set("SelectiveRPMod", "enabled_chats", list(self.enabled_chats))
        await message.edit("✅ Чат удален из разрешенных")

    async def rplistchatscmd(self, message: Message):
        """Список разрешенных чатов: .rplistchats"""
        if not self.enabled_chats:
            await message.edit("📋 Список разрешенных чатов пуст")
            return
        
        response = "📋 Разрешенные чаты для РП:\n\n"
        for chat_id in self.enabled_chats:
            try:
                chat = await self._client.get_entity(chat_id)
                title = getattr(chat, 'title', f'Чат {chat_id}')
                response += f"• {title} (ID: {chat_id})\n"
            except:
                response += f"• Unknown chat (ID: {chat_id})\n"
        
        await message.edit(response)

    async def watcher(self, message: Message):
        """Обработчик сообщений только в разрешенных чатах"""
        if not self.settings["enabled"] or not message.text or message.out:
            return
        
        # Проверяем разрешен ли чат
        chat_id = message.chat_id
        if chat_id not in self.enabled_chats:
            return
        
        current_time = time.time()
        user_id = message.sender_id
        
        # Проверка кулдауна
        if user_id in self.cooldowns and current_time - self.cooldowns[user_id] < self.settings["cooldown"]:
            return
        
        text = message.text.lower().strip()
        
        # Ищем точное совпадение с командами
        if text in self.commands:
            response = random.choice(self.commands[text])
            
            # Замена плейсхолдеров
            sender_name = await self.get_user_name(user_id)
            
            # Если есть reply, используем его как target
            if message.is_reply:
                try:
                    reply = await message.get_reply_message()
                    target_user = await self._client.get_entity(reply.sender_id)
                    target_name = target_user.first_name or f"user_{reply.sender_id}"
                except:
                    target_name = "всех"
            else:
                target_name = "всех"
            
            response = response.format(sender=sender_name, target=target_name)
            await message.reply(response)
            self.cooldowns[user_id] = current_time
    
    async def get_user_name(self, user_id: int):
        """Получение имени пользователя"""
        try:
            user = await self._client.get_entity(user_id)
            return user.first_name or f"user_{user_id}"
        except:
            return f"user_{user_id}"
    
    async def rpcmd(self, message: Message):
        """Список команд: .rp"""
        categories = {
            "Основные РП": list(self.commands.keys())[:70],
            "ВИП команды": list(self.commands.keys())[70:120],
            "Для влюбленных": list(self.commands.keys())[120:]
        }
        
        response = "🎭 Категории РП команд:\n\n"
        for category, commands in categories.items():
            response += f"🔹 {category}: {len(commands)} команд\n"
        
        response += f"\n📝 Просто напиши команду в чат\n"
        response += f"⏱️ Кулдаун: {self.settings['cooldown']}сек\n"
        response += f"🔢 Всего команд: {len(self.commands)}"
        
        await message.edit(response)
    
    async def rptogglecmd(self, message: Message):
        """Включить/выключить: .rptoggle <on/off>"""
        args = utils.get_args_raw(message).lower()
        if args == "on":
            self.settings["enabled"] = True
            await message.edit("✅ РП команды включены")
        elif args == "off":
            self.settings["enabled"] = False
            await message.edit("❌ РП команды выключены")
        else:
            status = "включены" if self.settings["enabled"] else "выключены"
            await m            r"(?i)(люблю|love|обожаю)": ["💖 И я тебя!", "😍 Взаимно!", "💘 Люблю!"],
            r"(?i)(спам|spam|флуд)": ["🚫 Нет спаму!", "⛔ Стоп флуд!", "🔇 Тише!"],
        }
        self.cooldowns = {}
        self.user_cooldowns = {}
        self.allowed_chats = set()
        
    async def client_ready(self, client, db):
        self._db = db
        self._client = client
        self.settings = self._db.get("SpecificChatRP", "settings", {
            "global_cooldown": 5,
            "user_cooldown": 15,
            "enabled": True,
            "probability": 100  # 100% шанс!
        })
        self.allowed_chats = set(self._db.get("SpecificChatRP", "allowed_chats", []))
    
    async def rpaddchatcmd(self, message: Message):
        """Добавить чат в разрешенные: .rpaddchat"""
        chat_id = message.chat_id
        if chat_id in self.allowed_chats:
            await message.edit("✅ Этот чат уже в списке разрешенных")
            return
        
        self.allowed_chats.add(chat_id)
        self._db.set("SpecificChatRP", "allowed_chats", list(self.allowed_chats))
        await message.edit("✅ Чат добавлен в разрешенные для РП команд")
    
    async def rpremovechatcmd(self, message: Message):
        """Удалить чат из разрешенных: .rpremovechat"""
        chat_id = message.chat_id
        if chat_id not in self.allowed_chats:
            await message.edit("❌ Этот чат не в списке разрешенных")
            return
        
        self.allowed_chats.remove(chat_id)
        self._db.set("SpecificChatRP", "allowed_chats", list(self.allowed_chats))
        await message.edit("✅ Чат удален из разрешенных")
    
    async def rplistchatscmd(self, message: Message):
        """Список разрешенных чатов: .rplistchats"""
        if not self.allowed_chats:
            await message.edit("📋 Список разрешенных чатов пуст")
            return
        
        response = "📋 Разрешенные чаты для РП:\n\n"
        for chat_id in self.allowed_chats:
            try:
                chat = await self._client.get_entity(chat_id)
                title = getattr(chat, 'title', f'Чат {chat_id}')
                response += f"• {title} (ID: {chat_id})\n"
            except:
                response += f"• Unknown chat (ID: {chat_id})\n"
        
        await message.edit(response)
    
    async def watcher(self, message: Message):
        """Обработчик всех сообщений"""
        if not self.settings["enabled"] or not message.text or message.out:
            return
        
        # Проверяем разрешен ли чат
        chat_id = message.chat_id
        if chat_id not in self.allowed_chats:
            return
        
        current_time = time.time()
        user_id = message.sender_id
        
        # Проверка кулдаунов
        if chat_id in self.cooldowns and current_time - self.cooldowns[chat_id] < self.settings["global_cooldown"]:
            return
        
        user_key = f"{chat_id}_{user_id}"
        if user_key in self.user_cooldowns and current_time - self.user_cooldowns[user_key] < self.settings["user_cooldown"]:
            return
        
        # ШАНС 100% - всегда срабатывает!
        text = message.text.lower()
        
        for pattern, responses in self.triggers.items():
            if re.search(pattern, text):
                response = random.choice(responses)
                
                # Замена плейсхолдеров
                if "{sender}" in response and "{target}" in response:
                    sender_name = await self.get_user_name(user_id)
                    target_name = await self.get_user_name((await message.get_reply_message()).sender_id) if message.is_reply else "всех"
                    response = response.format(sender=sender_name, target=target_name)
                
                await message.reply(response)
                
                self.cooldowns[chat_id] = current_time
                self.user_cooldowns[user_key] = current_time
                break
    
    async def get_user_name(self, user_id: int):
        """Получение имени пользователя"""
        try:
            user = await self._client.get_entity(user_id)
            return user.first_name or f"user_{user_id}"
        except:
            return f"user_{user_id}"
    
    async def rptogglecmd(self, message: Message):
        """Включить/выключить авто-РП: .rptoggle <on/off>"""
        args = utils.get_args_raw(message).lower()
        if args == "on":
            self.settings["enabled"] = True
            await message.edit("✅ Авто-РП реакции включены")
        elif args == "off":
            self.settings["enabled"] = False
            await message.edit("❌ Авто-РП реакции выключены")
        else:
            status = "включены" if self.settings["enabled"] else "выключены"
            await message.edit(f"📊 Авто-РП: {status}\nИспользуй: .rptoggle on/off")
        
        self._db.set("SpecificChatRP", "settings", self.settings)
    
    async def rpstatcmd(self, message: Message):
        """Статистика модуля: .rpstat"""
        total_triggers = sum(len(responses) for responses in self.triggers.values())
        await message.edit(
            f"📊 Статистика РП модуля:\n"
            f"• Всего триггеров: {total_triggers}\n"
            f"• Разрешенных чатов: {len(self.allowed_chats)}\n"
            f"• Вероятность: {self.settings['probability']}%\n"
            f"• Статус: {'ВКЛ' if self.settings['enabled'] else 'ВЫКЛ'}\n"
            f"• Глобальный CD: {self.settings['global_cooldown']}сек\n"
            f"• Пользовательский CD: {self.settings['user_cooldown']}сек"
        )
